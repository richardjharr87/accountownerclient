{"version":3,"sources":["store/actions/errorHandlerActions.js","axios/axios.js","store/actions/repositoryActions.js","components/Modals/SuccessModal/SuccessModal.js","components/Modals/ErrorModal/ErrorModal.js","containers/Owner/DeleteOwner/DeleteOwner.js"],"names":["closeErrorModal","type","actionTypes","handleHTTPError","error","props","response","status","execute404Handler","execute500Handler","executeOtherErrorHandler","instance","axios","create","baseURL","headers","headerType","getData","url","dispatch","get","then","data","catch","errorHandlerActions","postData","obj","post","postDataSuccess","putData","put","putDataSuccess","deleteData","delete","deleteDataSuccess","closeSuccessModal","ownersLoading","successModal","show","backdrop","Header","modalHeaderText","Body","modalBodyText","Footer","bsStyle","onClick","successClick","okButtonText","errorModal","closeModal","DeleteOwner","useSelector","state","repository","showSuccessModal","showErrorModal","errorHandler","errorMessage","useDispatch","useEffect","match","params","id","repositoryActions","owner","md","htmlFor","name","format","dateOfBirth","address","mdOffset","event","preventDefault","history","push"],"mappings":"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","file":"static/js/12.9b79bef6.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\r\n\r\nconst execute404Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_404_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst execute500Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_500_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst executeOtherErrorHandler = (error) => {\r\n    return {\r\n        type: actionTypes.HTTP_OTHER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const closeErrorModal = () => {\r\n    return {\r\n        type: actionTypes.CLOSE_ERROR_MODAL\r\n    }\r\n}\r\n\r\nexport const handleHTTPError = (error, props) => {\r\n    if (error.response.status === 404) {\r\n        return execute404Handler(props);\r\n    }\r\n    else if (error.response.status === 500) {\r\n        return execute500Handler(props);\r\n    }\r\n    else {\r\n        return executeOtherErrorHandler(error);\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:8080',\r\n    baseURL: 'https://brokerage.herokuapp.com',\r\n    headers: {\r\n        headerType: 'example header type'\r\n    }\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport * as errorHandlerActions from './errorHandlerActions';\r\nimport axios from '../../axios/axios';\r\n\r\nconst getDataSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.GET_DATA_SUCCESS,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const getData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.get(url)\r\n        .then(response => {\r\n            dispatch(getDataSuccess(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst postDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.POST_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\n\r\nexport const postData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.post(url, obj)\r\n        .then(response => {\r\n            dispatch(postDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst putDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.PUT_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\n\r\nexport const putData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.put(url, obj)\r\n        .then(response => {\r\n            dispatch(putDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.DELETE_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\n\r\nexport const deleteData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.delete(url)\r\n        .then(response => {\r\n            dispatch(deleteDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nexport const closeSuccessModal = (url, props) => {\r\n    return {\r\n        type: actionTypes.CLOSE_SUCCESS_MODAL,\r\n        props: props,\r\n        url: url\r\n    }\r\n}\r\n\r\nexport const ownersLoading = () => {\r\n    return {\r\n        type: actionTypes.OWNERS_LOADING\r\n    }\r\n}","import React, { Fragment } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\nconst successModal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"success\" onClick={props.successClick}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default successModal;","import React, { Fragment } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\nconst errorModal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"danger\" onClick={props.closeModal}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default errorModal;","import React, { Fragment, useEffect } from 'react';\r\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\r\nimport * as errorHandlerActions from '../../../store/actions/errorHandlerActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Well, Button, Col, Row, ControlLabel } from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\nimport SuccessModal from '../../../components/Modals/SuccessModal/SuccessModal';\r\nimport ErrorModal from '../../../components/Modals/ErrorModal/ErrorModal';\r\n\r\nconst DeleteOwner = (props) => {\r\n\r\n    const data = useSelector(state => state.repository.data);\r\n    const showSuccessModal = useSelector(state => state.repository.showSuccessModal);\r\n    const showErrorModal = useSelector(state => state.errorHandler.showErrorModal);\r\n    const errorMessage = useSelector(state => state.errorHandler.errorMessage);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const id = props.match.params.id;\r\n        const url = '/api/owner/' + id;\r\n        dispatch(repositoryActions.getData(url, { ...props }));\r\n    }, [props, dispatch]);\r\n\r\n    let owner = { ...data };\r\n\r\n    const deleteOwner = (event) => {\r\n        event.preventDefault();\r\n\r\n        const url = \"/api/owner/\" + data.id;\r\n\r\n        dispatch(repositoryActions.deleteData(url, { ...props }));\r\n    }\r\n\r\n    const redirectToOwnerList = () => {\r\n        props.history.push('/owner-List');\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col md={10}>\r\n                    <Well>\r\n                        <Row>\r\n                            <Col md={3}>\r\n                                <ControlLabel htmlFor='name'>Owners name:</ControlLabel>\r\n                            </Col>\r\n                            <Col md={7}>\r\n                                <span name='name'>{owner.name}</span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={3}>\r\n                                <ControlLabel htmlFor='dateOfBirth'>Date of birth:</ControlLabel>\r\n                            </Col>\r\n                            <Col md={7}>\r\n                                <span name='dateOfBirth'><Moment format=\"MM/DD/YYYY\">{owner.dateOfBirth}</Moment></span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={3}>\r\n                                <ControlLabel htmlFor='address'>Address:</ControlLabel>\r\n                            </Col>\r\n                            <Col md={7}>\r\n                                <span name='address'>{owner.address}</span>\r\n                            </Col>\r\n                        </Row>\r\n                    </Well>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col mdOffset={8} md={1}>\r\n                    <Button type=\"submit\" bsStyle=\"info\" onClick={deleteOwner}>Delete</Button>\r\n                </Col>\r\n                <Col md={1}>\r\n                    <Button bsStyle='danger' onClick={redirectToOwnerList}>Cancel</Button>\r\n                </Col>\r\n            </Row>\r\n            <SuccessModal show={showSuccessModal} modalHeaderText={'Success message'}\r\n                modalBodyText={'Action completed successfylly'}\r\n                okButtonText={'OK'}\r\n                successClick={() => dispatch(repositoryActions.closeSuccessModal('/owner-List', { ...props }))} />\r\n            <ErrorModal show={showErrorModal} modalHeaderText={'Error message'}\r\n                modalBodyText={errorMessage}\r\n                okButtonText={'OK'}\r\n                closeModal={() => dispatch(errorHandlerActions.closeErrorModal())} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DeleteOwner;"],"sourceRoot":""}