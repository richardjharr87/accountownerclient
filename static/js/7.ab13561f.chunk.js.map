{"version":3,"sources":["store/actions/errorHandlerActions.js","axios/axios.js","store/actions/repositoryActions.js","components/Modals/SuccessModal/SuccessModal.js","components/Modals/ErrorModal/ErrorModal.js","UI/Inputs/Input.js","Utility/InputConfiguration.js","Utility/FormUtility.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","containers/Account/CreateAccount/CreateAccount.js"],"names":["closeErrorModal","type","actionTypes","handleHTTPError","error","props","response","status","execute404Handler","execute500Handler","executeOtherErrorHandler","instance","axios","create","baseURL","headers","headerType","getData","url","dispatch","get","then","data","catch","errorHandlerActions","postData","obj","post","postDataSuccess","putData","put","putDataSuccess","deleteData","delete","deleteDataSuccess","closeSuccessModal","ownersLoading","successModal","show","backdrop","Header","modalHeaderText","Body","modalBodyText","Footer","bsStyle","onClick","successClick","okButtonText","errorModal","closeModal","input","inputField","errorMessage","invalid","shouldValidate","touched","elementType","controlId","id","componentClass","ControlLabel","sm","label","value","onChange","changed","onBlur","blur","selected","dateFormat","readOnly","className","showYearDropdown","dropdownMode","returnInputConfiguration","name","element","validation","required","valid","address","maxLength","dateOfBirth","moment","returnAcctConfiguration","accountType","dateCreated","convertStateToArrayOfFormObjects","formObject","formElementsArray","key","push","config","executeValidationAndReturnFormElement","event","updatedOwnerForm","formElement","startsWith","target","validationResponse","checkValidity","isValid","validationObject","trim","length","countInvalidElements","ownerForm","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","TypeError","CreateAccount","useState","accountForm","setAccountForm","isFormValid","setIsFormValid","match","params","ownerId","useDispatch","useSelector","state","errorHandler","showErrorModal","showSuccessModal","repository","useEffect","formUtilityActions","handleChangeEvent","updatedAccountForm","counter","horizontal","onSubmit","preventDefault","accountToCreate","repositoryActions","map","mdOffset","md","disabled","history"],"mappings":"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","file":"static/js/7.ab13561f.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\r\n\r\nconst execute404Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_404_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst execute500Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_500_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst executeOtherErrorHandler = (error) => {\r\n    return {\r\n        type: actionTypes.HTTP_OTHER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const closeErrorModal = () => {\r\n    return {\r\n        type: actionTypes.CLOSE_ERROR_MODAL\r\n    }\r\n}\r\n\r\nexport const handleHTTPError = (error, props) => {\r\n    if (error.response.status === 404) {\r\n        return execute404Handler(props);\r\n    }\r\n    else if (error.response.status === 500) {\r\n        return execute500Handler(props);\r\n    }\r\n    else {\r\n        return executeOtherErrorHandler(error);\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:8080',\r\n    baseURL: 'https://brokerage.herokuapp.com',\r\n    headers: {\r\n        headerType: 'example header type'\r\n    }\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport * as errorHandlerActions from './errorHandlerActions';\r\nimport axios from '../../axios/axios';\r\n\r\nconst getDataSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.GET_DATA_SUCCESS,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const getData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.get(url)\r\n        .then(response => {\r\n            dispatch(getDataSuccess(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst postDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.POST_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\n\r\nexport const postData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.post(url, obj)\r\n        .then(response => {\r\n            dispatch(postDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst putDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.PUT_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\n\r\nexport const putData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.put(url, obj)\r\n        .then(response => {\r\n            dispatch(putDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.DELETE_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\n\r\nexport const deleteData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.delete(url)\r\n        .then(response => {\r\n            dispatch(deleteDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nexport const closeSuccessModal = (url, props) => {\r\n    return {\r\n        type: actionTypes.CLOSE_SUCCESS_MODAL,\r\n        props: props,\r\n        url: url\r\n    }\r\n}\r\n\r\nexport const ownersLoading = () => {\r\n    return {\r\n        type: actionTypes.OWNERS_LOADING\r\n    }\r\n}","import React, { Fragment } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\nconst successModal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"success\" onClick={props.successClick}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default successModal;","import React, { Fragment } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\nconst errorModal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"danger\" onClick={props.closeModal}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default errorModal;","import React, { Fragment } from 'react';\r\nimport { FormGroup, Col, FormControl, ControlLabel } from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './Input.css';\r\n\r\nconst input = (props) => {\r\n    let inputField = null;\r\n    let errorMessage = null;\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        errorMessage = (<em>{props.errorMessage}</em>);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case 'input':\r\n            inputField = (\r\n                <FormGroup controlId={props.id}>\r\n                    <Col componentClass={ControlLabel} sm={2}>\r\n                        {props.label}\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <FormControl type={props.type} value={props.value} onChange={props.changed} onBlur={props.blur} />\r\n                    </Col>\r\n                    <Col>\r\n                        <em>{errorMessage}</em>\r\n                    </Col>\r\n                </FormGroup>\r\n            )\r\n            break;\r\n        case 'datePicker':\r\n            inputField = (\r\n                <FormGroup controlId={props.id}>\r\n                    <Col componentClass={ControlLabel} sm={2}>\r\n                        {props.label}\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <DatePicker selected={props.value} dateFormat=\"MM/DD/YYYY\" readOnly\r\n                            onChange={props.changed} className='datePickerControl'\r\n                            showYearDropdown dropdownMode=\"select\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <em>{errorMessage}</em>\r\n                    </Col>\r\n                </FormGroup>\r\n            )\r\n            break;\r\n        default: inputField = null;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {inputField}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default input;","import moment from 'moment';\r\n\r\nexport const returnInputConfiguration = () => {\r\n    return {\r\n        name: {\r\n            element: 'input', type: 'text', value: '',\r\n            validation: { required: true }, valid: false, touched: false,\r\n            errorMessage: '', label: 'Name:'\r\n        },\r\n        address: {\r\n            element: 'input', type: 'text', value: '',\r\n            validation: { required: true, maxLength: 60 }, valid: false, touched: false,\r\n            errorMessage: '', label: 'Address:'\r\n        },\r\n        dateOfBirth: {\r\n            element: 'datePicker', type: 'text', value: moment(),\r\n            valid: true, touched: false,\r\n            errorMessage: '', label: 'Date of birth:'\r\n        }\r\n    }\r\n}\r\n\r\nexport const returnAcctConfiguration = () => {\r\n    return {\r\n        accountType: {\r\n            element: 'input', type: 'text', value: '',\r\n            validation: { required: true }, valid: false, touched: false,\r\n            errorMessage: '', label: 'Account type:'\r\n        },\r\n        dateCreated: {\r\n            element: 'datePicker', type: 'text', value: moment(),\r\n            valid: true, touched: false,\r\n            errorMessage: '', label: 'Created date:'\r\n        }\r\n    }\r\n}","export const convertStateToArrayOfFormObjects = (formObject) => {\r\n    const formElementsArray = [];\r\n    for (let key in formObject) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: formObject[key]\r\n        });\r\n    }\r\n\r\n    return formElementsArray;\r\n}\r\n\r\nexport const executeValidationAndReturnFormElement = (event, updatedOwnerForm, id) => {\r\n    let formElement = { ...updatedOwnerForm[id] };\r\n    formElement.value = id.startsWith('date') ? event : event.target.value;\r\n    formElement.touched = true;\r\n\r\n    const validationResponse = checkValidity(formElement.value, formElement.validation);\r\n\r\n    formElement.valid = validationResponse.isValid;\r\n    formElement.errorMessage = validationResponse.errorMessage;\r\n\r\n    return formElement;\r\n}\r\n\r\nconst checkValidity = (value, validation) => {\r\n    let validationObject = {\r\n        isValid: true,\r\n        errorMessage: ''\r\n    };\r\n\r\n    if (validation) {\r\n        if (validation.required) {\r\n            validationObject.isValid = value.trim() !== '';\r\n            validationObject.errorMessage = validationObject.isValid ? '' : 'Field is required';\r\n        }\r\n\r\n        if (validationObject.isValid && validation.maxLength) {\r\n            validationObject.isValid = value.length <= validation.maxLength;\r\n            validationObject.errorMessage = `Not allowed more than ${validation.maxLength} characters`;\r\n        }\r\n\r\n        return validationObject;\r\n    }\r\n    else {\r\n        return validationObject;\r\n    }\r\n}\r\n\r\nexport const countInvalidElements = (ownerForm) => {\r\n    let countInvalidElements = 0;\r\n    for (let element in ownerForm) {\r\n        if (!ownerForm[element].valid) {\r\n            countInvalidElements = countInvalidElements + 1;\r\n            break;\r\n        }\r\n    }\r\n    return countInvalidElements;\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState, useEffect } from 'react';\r\nimport Input from '../../../UI/Inputs/Input';\r\nimport { Form, Well, Button, FormGroup, Col } from 'react-bootstrap';\r\nimport { returnAcctConfiguration } from '../../../Utility/InputConfiguration';\r\nimport * as formUtilityActions from '../../../Utility/FormUtility';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\r\nimport * as errorHandlerActions from '../../../store/actions/errorHandlerActions';\r\nimport SuccessModal from '../../../components/Modals/SuccessModal/SuccessModal';\r\nimport ErrorModal from '../../../components/Modals/ErrorModal/ErrorModal';\r\n\r\nconst CreateAccount = (props) => {\r\n\r\n    const [accountForm, setAccountForm] = useState({});\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n    const [ownerId, setOwnerId] = useState(props.match.params.ownerId);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const errorMessage = useSelector(state => state.errorHandler.errorMessage);\r\n    const showErrorModal = useSelector(state => state.errorHandler.showErrorModal);\r\n    const showSuccessModal = useSelector(state => state.repository.showSuccessModal);\r\n\r\n    useEffect(() => {\r\n        setAccountForm(returnAcctConfiguration());\r\n    }, []);\r\n\r\n    const formElementsArray = formUtilityActions.convertStateToArrayOfFormObjects({ ...accountForm });\r\n\r\n    const createAccount = (event) => {\r\n        event.preventDefault();\r\n\r\n        const accountToCreate = {\r\n            accountType: accountForm.accountType.value,\r\n            dateCreated: accountForm.dateCreated.value,\r\n            ownerId: ownerId\r\n        }\r\n\r\n        const url = '/api/accounts';\r\n        dispatch(repositoryActions.postData(url, accountToCreate, { ...props }));\r\n    }\r\n\r\n    const handleChangeEvent = (event, id) => {\r\n        const updatedAccountForm = { ...accountForm };\r\n        updatedAccountForm[id] = formUtilityActions.executeValidationAndReturnFormElement(event, updatedAccountForm, id);\r\n\r\n        const counter = formUtilityActions.countInvalidElements(updatedAccountForm);\r\n\r\n        setAccountForm(updatedAccountForm);\r\n        setIsFormValid(counter === 0);\r\n    }\r\n\r\n    const redirectToOwnerDetails = () => {\r\n        props.history.push('/ownerDetails/' + ownerId);\r\n    }\r\n\r\n    return (\r\n        <Well>\r\n            <Form horizontal onSubmit={createAccount}>\r\n                {\r\n                    formElementsArray.map(element => {\r\n                        return <Input key={element.id} elementType={element.config.element}\r\n                            id={element.id} label={element.config.label}\r\n                            type={element.config.type} value={element.config.value}\r\n                            changed={(event) => handleChangeEvent(event, element.id)}\r\n                            errorMessage={element.config.errorMessage}\r\n                            invalid={!element.config.valid} shouldValidate={element.config.validation}\r\n                            touched={element.config.touched}\r\n                            blur={(event) => handleChangeEvent(event, element.id)} />\r\n                    })\r\n                }\r\n                <br />\r\n                <FormGroup>\r\n                    <Col mdOffset={6} md={1}>\r\n                        <Button type='submit' bsStyle='info' disabled={!isFormValid}>Create</Button>\r\n                    </Col>\r\n                    <Col md={1}>\r\n                        <Button bsStyle='danger' onClick={redirectToOwnerDetails}>Cancel</Button>\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n            <SuccessModal show={showSuccessModal}\r\n                modalHeaderText={'Success message'}\r\n                modalBodyText={'Action completed successfully'}\r\n                okButtonText={'OK'}\r\n                successClick={() => dispatch(repositoryActions.closeSuccessModal('/ownerDetails/' + ownerId, { ...props }))} />\r\n            <ErrorModal show={showErrorModal}\r\n                modalHeaderText={'Error message'}\r\n                modalBodyText={errorMessage}\r\n                okButtonText={'OK'} closeModal={() => dispatch(errorHandlerActions.closeErrorModal())} />\r\n        </Well>\r\n    )\r\n}\r\n\r\nexport default CreateAccount;"],"sourceRoot":""}